matrix:
  include:
    - stage: 'Lint'
      language: node_js
      os: linux
      node_js: '10'
      script: cd src && npm run ci.tslint && cd ../demo && npm run ci.tslint && cd ../demo-ng && npm run ci.tslint
    - stage: 'Build'
      os: linux
      language: android
      env:
        - Build="Android"
      jdk: oraclejdk8
      before_install: nvm install stable
      script:
        - cd src && npm i && npm run tsc && cd ../demo && tns build android
    - os: osx
      env:
        - Build="iOS"
        - Xcode="10"
      osx_image: xcode10
      language: node_js
      node_js: '10'
      jdk: oraclejdk8
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
      script:
        - cd src && npm i && npm run tsc && cd ../demo && tns build ios
    - stage: 'WebPack Core'
      os: osx
      env:
        - WebPack="iOS"
        - Type="Core"
      osx_image: xcode10
      language: node_js
      node_js: '10'
      jdk: oraclejdk8
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
      script: 
        - cd demo && npm run build.plugin && npm i && tns build ios --bundle --env.uglify
    - language: android
      os: linux
      env:
        - WebPack="Android"
        - Type="Core"
      jdk: oraclejdk8
      before_install: nvm install 10
      script: cd demo && npm run build.plugin && npm i && tns build android --bundle --env.uglify --env.snapshot
    - stage: 'WebPack Angular'
      os: osx
      env:
        - WebPack="iOS"
        - Type="Angular"
      osx_image: xcode10
      language: node_js
      node_js: '10'
      jdk: oraclejdk8
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
    script:
        - cd src && npm run build && npm pack
        - cd ../demo-angular && tns plugin add ../src/*.tgz
        - npm i && tns build ios --bundle --env.uglify --env.aot
      - language: android
      os: linux
      env:
        - Webpack="Android"
        - Type="Angular"
      jdk: oraclejdk8
      before_install: nvm install 8
      script:
        - cd src && npm run build
        - cd ../publish && sh pack.sh
        - cd ../demo-angular && tns plugin add ../publish/package/*.tgz
        - npm i && tns build android --bundle --env.uglify --env.snapshot --env.aot
    - stage: "Tests"
       - os: linux
      language: android
      dist: precise
      jdk: oraclejdk8
      env: 
        - Android="UnitTests"
      before_script:
        - echo no | android create avd --force -n test -t android-21 -b armeabi-v7a
        - emulator -avd test -no-audio -no-window &
        - android-wait-for-emulator
      before_install:
        - nvm install 8
      script:
        - cd src && npm i && npm run tsc && npm run tslint && cd ../demo && tns build android
        - travis_wait travis_retry tns test android --justlaunch
    - os: osx
      language: node_js
      node_js: "8"
      jdk: oraclejdk8
      env: 
        - iOS="UnitTests"
      osx_image: xcode10.0
      script: 
        - cd src && npm i && npm run tsc && npm run tslint && cd ../demo && tns build ios
        - travis_wait travis_retry tns test ios --justlaunch

android:
  components:
    - tools
    - platform-tools
    - build-tools-28.0.3
    - android-28
    - extra-android-m2repository
    - sys-img-armeabi-v7a-android-21

before_install:
  - sudo pip install --upgrade pip
  - sudo pip install six

install:
  - echo no | npm install -g nativescript
  - tns usage-reporting disable
  - tns error-reporting disable
